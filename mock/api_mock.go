// Code generated by MockGen. DO NOT EDIT.
// Source: api.go
//
// Generated by this command:
//
//	mockgen -source api.go -destination ../mock/api_mock.go -package mock
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	esaj "github.com/perebaj/esaj/esaj"
	gomock "go.uber.org/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// SaveProcessSeeds mocks base method.
func (m *MockStorage) SaveProcessSeeds(ctx context.Context, ps []esaj.ProcessSeed) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveProcessSeeds", ctx, ps)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveProcessSeeds indicates an expected call of SaveProcessSeeds.
func (mr *MockStorageMockRecorder) SaveProcessSeeds(ctx, ps any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveProcessSeeds", reflect.TypeOf((*MockStorage)(nil).SaveProcessSeeds), ctx, ps)
}

// MockesajClient is a mock of esajClient interface.
type MockesajClient struct {
	ctrl     *gomock.Controller
	recorder *MockesajClientMockRecorder
}

// MockesajClientMockRecorder is the mock recorder for MockesajClient.
type MockesajClientMockRecorder struct {
	mock *MockesajClient
}

// NewMockesajClient creates a new mock instance.
func NewMockesajClient(ctrl *gomock.Controller) *MockesajClient {
	mock := &MockesajClient{ctrl: ctrl}
	mock.recorder = &MockesajClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockesajClient) EXPECT() *MockesajClientMockRecorder {
	return m.recorder
}

// SearchByOAB mocks base method.
func (m *MockesajClient) SearchByOAB(ctx context.Context, oab string) ([]esaj.ProcessSeed, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchByOAB", ctx, oab)
	ret0, _ := ret[0].([]esaj.ProcessSeed)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchByOAB indicates an expected call of SearchByOAB.
func (mr *MockesajClientMockRecorder) SearchByOAB(ctx, oab any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchByOAB", reflect.TypeOf((*MockesajClient)(nil).SearchByOAB), ctx, oab)
}
